name: Build, push, and deploy
on: push
env:
  APP: flex-joark-mottak
jobs:
  build:
    name: Build and push Docker container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: '11.x'
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Generate version and image name
        run: |
          TIME=$(TZ="Europe/Oslo" date +%Y.%m.%d-%H.%M)
          COMMIT=$(git rev-parse --short=8 HEAD)
          VERSION=$TIME-$COMMIT
          echo "IMAGE=docker.pkg.github.com/${GITHUB_REPOSITORY}/$APP:$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo $VERSION > VERSION.txt
      - name: Store VERSION for subsequent jobs
        uses: actions/upload-artifact@v2
        with:
          name: VERSION.txt
          path: VERSION.txt
      - name: mvn clean package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
        run: |
          mvn clean package --settings github-maven-settings.xml
      - name: Build and publish Docker image
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/dev-')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag ${IMAGE} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}
  deploy-to-dev:
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/dev-')
    name: Deploy to dev-gcp
    runs-on: ubuntu-latest
    needs: build
    concurrency: deploy-to-dev
    steps:
      - uses: actions/checkout@v1
      - name: Download VERSION-artifact
        uses: actions/download-artifact@v2
        with:
          name: VERSION.txt
          path: .
      - run: echo "VERSION=`cat VERSION.txt`" >> $GITHUB_ENV
      - run: echo "IMAGE=docker.pkg.github.com/${GITHUB_REPOSITORY}/$APP:$VERSION" >> $GITHUB_ENV
      - name: Deploy to dev-gcp
        uses: nais/deploy/actions/deploy@master
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/dev-gcp.yaml

  deployQ2:
    name: Deploy Q2
    needs: build
    if: ${{github.event.inputs.miljo == 'q2' || (github.event_name == 'push' && github.ref == 'refs/heads/master')}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais/dev-q2.yaml

  deployProd:
    name: Deploy PROD
    needs: build
    if: ${{ github.event.inputs.miljo == 'prod' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: nais/prod-fss.yaml
